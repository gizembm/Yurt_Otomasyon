<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbgeriDon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA5gAAAOYBAMAAABC5kGOAAAABGdBTUEAALGPC/xhBQAAABJQTFRF5ubm
        ////AAAApKSkwMDATU1NflHjhgAAFtpJREFUeNrtncuW20ayRYm72nPyyp6zwMJctNxz8cqei5br/3/l
        1gMsud0sFR6ZEYcnd6yebC43FJl7RRFEIIDN7iW2m5cAbxkFUgCRCSLTGQVSAJEJItMZBVIAkQki0xkF
        UgCRCSLTGQVSAJEJXsXH6MaPwBtGZBohMo0QmUaITCNEphEi0wiRaYTINEJkGiEyjRCZRohMI0SmESLT
        CFW6cGAJFEgBRCaITGcUSAFEJohMZxRIAUQmiExnFEgBRCaITGcUSAFEJngVN0pNOZDmNIhMK0SmESLT
        CJFphMg0QmQaITKNEJlGiEwjRKYRItMIkWmEyDRClS4cWAIFUgCRCSLTGQVSAJEJItMZBVIAkQki0xkF
        UgCRCSLTGQVSAJEJXsWNUlMOpDkNItMKkWmEyDRCZBohMo0QmUaITCNEphEi0wiRaYTINEJkGiEyjVCl
        CweWQIEUQGSCyHRGgRRAZILIdEaBFEBkgsh0RoEUQGSCyHRGgRRAZIJXcaPUlANpToPItEJkGiEyjRCZ
        RohMI0SmESLTCJFphMg0QmQaITKNEJlGiEwjVOnCgSVQIAUQmSAynVEgBRCZIDKdUSAFEJkgMp1RIAUQ
        mSAynVEgBRCZ4FXcKDXlQJrTIDKtEJlGiEwjRKYRItMIkWmEyDRCZBohMo0QmUaITCNEphEi0whVunBg
        CRRIAUQmiExnFEgBRCaITGcUSAFEJohMZxRIAUQmiExnFEgBRCZ4FTdKTbkJ+I8QySofb1Dm5svDQ9/3
        Dw+fPgtlpYC3JnP75UnkJYZvJ4msRPCmZO52f/T/jG9ddlY6eEsyd1/+7K/EX91WKElkTsFu++/+egyn
        nUqSyJyE3c9/9m/Gx51GksichN2HH7h8/FO7U0gyG29E5g/rcrSZnmQ63obMd10+2txmJ5mPtyFz+67L
        p+9NrZyR+Qb++r7Lvj9q5YzM6/jHFJf9IJUzMq/jh0ku+/5eKGdkXscpX5gvcZbJOUnm+El2F+5t7CZ9
        Yb78oT2J5JyFAin8ELtfJrvs+8MtrKhhmdP/yD6f0UrkjMzr2P00x+XjGa1Azsh8A3+e5bLvv27zc0bm
        dez+b6bMoUvPGZlv4NzCfCrN7JyReR13cwvzqTS1loDMC84vzMfS1FoCMi/4PwtkDlpLQOaI2wUuLxf1
        RJaAzAsuKcy+PygtAZkjLvnGfIqTzhKQecFlhdn3e50lIHPEpYU5ngIpLCEDN0pNuQvOvvjzPc4iS4hG
        XZmLC7Pv77caS0DmiCsKs+81loDMC64ozJe/s/lLQOaIqwrz+e9s+hKQecFVhdkPCktA5ojrCvP59pHs
        JSDzgusKs+/3+UtA5gVXFubTbXrZS0DmiMvaJX+P9CUg84JLr8p+j3P2EpA54vrCfPzSlFpRwzLXF+bj
        l6bUitqVWaAw+x6ZChkVKczHX5pKK4qSOX6S3YX7G679jfkSZ6EVhaFACv+Jay/+jLHXWVHDMssU5st0
        n8aK2pVZqDD7QWZFDcssVJh936msqF2ZpQrzZe5WYUUNyyxWmP2dyIralbm6XfI99horalhmucJ8PZ3V
        WmBLMotc/HmJAZm5WLAwn+8Dyl9RwzILFmbfnxRW1K7MkoWJzGQsWpiXH5pKC2xIZpE+5vc4568oAzcS
        TblyF39GmekrikYhmWW/Mfv+Ln1F7cosXZjITMyodGGO0/ACe9yezOKF2eBTvmVkFi/MyyNkVBbYkMzy
        hYnMtIzKF+bluWsiC2xJZvnCRGZWRoUv/iAzM6OyV2WRmZlRjcJEZlJGNQoTmTkZVTiVRWZWRlUKs0WZ
        4yeZXbg6hXm5o0tggWGYn0KFiz/PcUBmPFYqTGQmYK3CRGYC1irM/l5mj5uRWa0wL7PT2QtsSWa1wryM
        gWUvsCGZNdolYzR4q2VyCvUKE5nhWOfiz3NwR3swVixMZk2isWJh9jp73IbMKn3MMZjPDMZ6p7JMTkdj
        zcJs8pkGY2R04epd/HmKu4QVJWOmzJqnsq8TfQJ73ILMuoXZH2X2uAWZdQtzfL+twh43ILNyYQ46e9yA
        zMqFOY4NKeyxv8zKhXmZzlTYY3+ZlQuzP+vssb/MyoXZ5tsTklKoevHnKXivSVwKNdslT8Ebh+JSqP2N
        ybvAAlOoXZj9UWiPzWVWL0zenxmXQvXCbPTNtuMnoW23+oV5l99XzMCEf7P2xZ/++Sq70B47y6xfmIPW
        HhvLDCjMvdYeG8usX5jPjWmhPfaVGVCYQ/amNiMzoDD32Zvaiszq7ZJ+vP1HaI9tZQYU5pC+qa3IrH7x
        53LHrNAeu8qs3sd8jC59UxuRGVCYh/xNbUNmRGEe8ze1DZkBhTkIbGoTMgNOZV9nTIT2OBQ3QW23gIs/
        j4UZuSItDJUZU5j5m9qCzJjCFNjUFmQGfWPmb2oDMoMKU2BTG5AZdSqbv6n+MqMKU2BT/WWG/cbM31R/
        mVGFKbCp9jIjrsqeRTbVXmbcVdn8TXWXGXhVNn9T3WUGtkvyN9VcZtw3psKmmsuMKEydTU2TOX5St88W
        8o2Z3UgUwIh/JObij9CmOsuMOZUV2lRjmUFXZYU21Vhm0G9MoU31lRnVLhHaVF+ZURd/hDbVVmZYu0Ro
        U21lhl2VFdpUW5lhV2WFNtVVZtxVWaFNdZUZ1y4R2lRTmYF9TKFNNZXJ2JePzIjC/Cqwi0K4qdVnY+zL
        qDnN2JePTMa+jGQy9uUjk7EvI5mMffnIZOzLSCZjX0YyGfvykRl3VTZ/F0WwnkzGvnxkBk6X5O+iCFaT
        ydiXj0zGvoxkMvaVIXP8pHBjjbEvn+Y0Y19GMhn78pHJ2JeRTMa+fGQy9mUkk7EvH5mMfRnJZOzLSCZj
        Xz4y4/qYQrsogsWPytiXj0zGvoxkMvblIzOij8nY149wU6yxxtiXUXOasS8fmYx9Gclk7MtHJmNfRjIZ
        +/KRydiXkUzGvoxkMvblI5O3fWVjQZmMfWVjOZmMfaVjOZmMfaVjMZmBfUyBbdPEYjIZ+8rHUp00xr4U
        sMxhGPuSwDKHYexLAoschrEvDSxyGMa+NLDEYRj7EsESh2HsSwQLHIaxLxUscBjGvlSwwGHC+phC26aJ
        6w/D2JcMrj9MWGEqbZsmrj4MY186uPowcYWptG2auPYwvO1LDDfLO2mMfQnhWpmMfQnhSpmMfSnhSpmM
        fSnhOpmMfUnhOpmMfUnhKpmMfWnhKpmMfWnhKpmMfWnhGpm87UsM18iMuyqbv083gStkBrZL8vfpJnCF
        zMB2Sf4+3QQulxk59uUfyTIDCrP/7dOX5/+N4Ycj//775+ce1lqZ4yezW2cRhdlSDN9Oac3piIs/rcXw
        8bLRwTIpzBrxqDNBJoVZKb51a+7lWfb/ozBrxXDaBsukMOvF8HEbK5PCrBkft5EyQ35jNhwfI2VSmJXj
        GCiTwqwcwylMJoVZPRaOMC6QSWHWj/sgmRRmRCx6hsN8mRRmRDw9KLC+TAozJg4BU2Bc/ImK87Z6c5rC
        jIqhqy2TwoyL/a6yTAozMCpXJoUZGfu6MinM0OhqyqQwY2NfUyaFGRw1ZQa8IoH4e8ybm5on88/sxbUW
        8yYaZ8n8JXtt7cWxmsxfs5fWXhxqyeT0JyG6SjL/N3thLcZdJZmc/iTEnMcgzeiVfcheV5txrNKc5kdm
        Suxn3OA++T/s+CubEkMNmZzLJsWpgkyuGCTF1/IyaZhkxWH6HNFkmXxlZkX5yuQrMy2OxWXylZkW+9Iy
        Oy6yp8WheGVmr6jlKC2Ta3mJMXn2dqJMOiaJMflVaNNk8pWZGfeFZfIrMzFmvXFy836vLHs9bcc0R1Ob
        01wySI1jUZlcMkiNMzJ9Yl9UJncZpMZhW1Imv0xSYygqk18muVHyz+w2ezGtx6mgTK7MJsexoExOZpPj
        XFAmJ7PJsS8nk5u5smO/LSeTXybJcSgok18myYFMoximyRw/+XGvLHstzcfwvqPJzenstRDINIpyMrma
        lx7lZHKfQXp0yPSJUzGZXGdPD2QaxRGZPoFMo0CmUSDTKJBpFMg0inI/TbhokB7TZI7xw17Zv7KXQnx+
        z9Hk5jSVmR5dMZk8nSI93nc0+baR7KUQBe8Byl5K8zHxHqBJMrmhKzmQaRQlb7XkJujkKCmT8YTkuC8n
        k8Gh7Cg4OMRIX3aUHOnjSntylBy25cbZ5Cg5Bs9vk+SY4ohHx9xGTH10zPjJj3tlvJ84N+4nOJr+iFKe
        HZwad0Vl8tskNc5FZfLbJDWORWXSnk6NaY54rPctxOTHek+UyW+TxNiXlcmrMDKj8KswuDqbGaVfUsMZ
        UGJMdcSL3fSj/IvduGyQFsVfuchd7XlR/mWo/NJMC14g7hMzXiA+xru9sh1fmklx3k11NF0mt44kRVdB
        5o4vzZQYdjVkckUvJe6qyOTHSUqcqsjk72xGDLs6Mvk7mxDnSjI5n02IrpLMHRfbw+P+XSlLZXLdIDyO
        1WRyChQdwwQpS2X+lL241uJcUSY/NYNjipSlMmmdxMbXmjJpUcdGN1Pm+Mm0XhnjYKGx306T8oozZXLh
        IC6GbqKUpTIpzbg4T5ayVCalGRXDdClLZVKaUXEMkElpxsRhjpSlMnf81oyIoQuRSWlGxLR3X6yWybdm
        QNzPlbJUJqVZPQ6zpSyVybdm7Ri6OJlcoa0cpwVSlsqkNOvGxyVSlsrcUpo14+O8SaG1Mulr1ovhuF0m
        ZfMaE/uZF+SEtlYMc+6t/AculMm3ZqX4a5aFQjIpzRrxcJpnoZBMSrN8PPw220IhmZRm2Xj49nm3y5IZ
        coX2t99f4tNL+OLvm+fNTZMZUZrjQ+MaiKUWdmVkRpTmsG5xreEKmYGlmb9PN4ErZEac0A4q+3QTuEZm
        XGnm79NN4BqZcaWZv083gatkRjRPzhr7dBO4SmZE82TQ2KebwFUyQ4bC5jxuo3Fc1TqL+a3ZLWy6Nojr
        DhNxQvt1XbO2JVx5mJjSFNinm8CVh4kpTYF9uglce5iIE9ouY2NuEdceJqQ0BfbpJnD1YQKbJ0Lbpomr
        DxPYPBHaNk1cf5i40hTaNk1cf5i40hTaNk0scJiw0hTaNk0scJiw5onQtmligcOE9TWFtk0TSxwmqjSF
        tk0TSxwmqq8ptG26uFnbSQtqnuh0DjWxjMyYK7RC26aJhWTGlKbOtmliIZkxfU2dbdPEUjIjmycC26aJ
        pWTGlKbMtmliMZmRQ2H526aJxWQGTp4IbJsmlpPJUFg6lpMZ2NfM3zZNLCiTobBsLCiTobBsLCmToTAj
        mQyFGclkKCxb5vhJmcYaQ2G335x+RYbCjGQG9TUFtk0Tyx6VoTAjmaHNE6FdFMHCR2UozEgmQ2FOMhkK
        M5LJUJiTTIbCjGTGNU+EdlEEyx+VoTAjmQyFGclkKMxJJkNhmbgp3FhjKCwHq8gM6mvq7KII1pHJUJiR
        TIbCnGQyFGYkk6EwJ5kMhRnJ5E1hTjIZCjOSyVCYk0yGwoxkMhTmJJOhMCOZDIUZyWQoLFzm+EmVPhtD
        YbffnH5FhsKMZPKmMCeZDIUZyWQozEkmQ2FGMhkKc5LJUJiRTIbCnGQyFGYkkzeFOclkKMxIJkNhRjIZ
        CnOSyVBYKG7q9tkYCgvCCJkMhTnJZCjMSCZDYU4yGQozkslQmJNMhsKMZDIU5iSToTAjmQyFOclkKMxI
        JkNhTjIZCjOSyVCYkUyGwurLHD+JaLsxFHb7zelXZCjMSCZDYU4yGQozkslQmJPMyOaJ0B57ymQozElm
        RGke8ze1DZkRpXnI39RGZEaU5il9UxuRGVGad+mb2orMgCu07U74Rf+bEX3NY/amtiIzYijsPntTm5EZ
        0NdselxzE9p2CzihPceuSAUTZAac0N5vlfbYWmb90hyQGZZC/dI8Ku2xt8z6pblX2mNvmfVL89DkVHyO
        zPqlqbTH5jLrl+ZRaI/dZVYvzb3QHrvLrF6ahxafV5Els3ppIjMwhdpXaI86e+wvs3bz5Kyzx/4yazdP
        7ncye+wvs/ZQ2KFFmeMnCV24uie0Q3ZfMQPzUqh8Qtvp7HEDMiuX5lFnj1uQWbc0zzp73ILMuqW519nj
        JmRWLc3DVmaPm5BZtTQHZMZizdIcdPa4DZlVS1NnjxuRWbM0TzJ73IjMmqV5lNnjVmRWvEJ7ltnjVmRW
        7GsiMxzrleadzB43I7NeX3Mvs8ehuMnswlU7od1nrSgN82VWO6G9V9njlmTWKs2Dyh63JLNWaSIzAyuV
        ZntvxlCQWak0kZmCdUoTmTlYpTSRmYNVShOZSVijNJGZhDVKE5lZWOEKLTKzsELzhIsGWViheYLMNCxf
        mg3KHD/J7sJVOKEd74KWWWAACqTwgsVPaO+zV9SwzOKl2eCdBgIpjFi6NLkHKBMLlyZ352Vi4dJEZiqW
        LU3uaE/FsqWJzFwsWpoSK2pYZsnSZD4zGwuWJpPT2VjwCi3PNMjGgn1NnjaSjuVKk+cApWO5vmaLT+ga
        Q6YpV+yE9qSyojiUk1nqhHbQWVHDMguVZpPPm81P4Z9YpjR5ErRCRoVKk2e0K2RUqDR5e4JCRoVKk/ea
        KGRUpjR545BERmVKk3eBSWT0FOtLk7f0SWT0FOtLM30JyHzFtVdoebOtRkbPsbZ5wjunNTJ6jrXNE94G
        r5HRC64rzadbRtKXkCBz/CS7C/dfuOqEdi+xhHgUSOEqrjqhPUosAZmvuKY0RZaAzAuuKM29yBKQ+YrL
        S/OosgRkXnBxaQ4yS0DmKy4tzTudJSDzgktL86SzBGS+4rLSPCgtAZkXXFaaR6UlIPMVl5TmoLUEZF5w
        yRXas9YSkHnBBX3N1zvZRZaAzFecX5pft9k5I/MNnN3XHLr0nJNxo9SU+0+ce0J7Fsg5DdVl7n6Z5fIg
        kTMy38I/58g8auSMzDfwwwyX9yI5I/MtnH4O9PKzRCFnZL6B28l/aI8yOSPzLZz6h7a9t5/eoMzdT9P+
        yErljMy38NcpLht8vMhNypzytTl2vmRyRuYb2P38rs2vLU7X3qTMzbs2v+7yk0zHG5H5ns2vO4Uks/FW
        ZG667dtnQcPHnUaSyJyKu3+/eR67lUkyV+b4SXYXbhJ+uPqn9i+tJGlOT7yLZPvHf+n89nmnlSQyp+Ju
        ++Xh739gH1Vu87OSQYEUZmG3/deXTw9P8e3T5+4ml4DM77h7ja1QVhIokAKITBCZziiQAohMEJnOKJAC
        iEwQmc4okAJYEjdKTTmwheY0iMyGEJlGiEwjRKYRItMIkWmEyDRCZBohMo0QmUaITCNEphEi0whVunBg
        CRRIAUQmiExnFEgBRCaITGcUSAFEJohMZxRIAUQmiExnFEgBRCZ4FTdKTTmQ5jSITCtEphEi0wiRaYTI
        NEJkGiEyjRCZRohMI0SmESLTCJFphMg0QpUuHFgCBVIAkQki0xkFUgCRCSLTGQVSAJEJItMZBVIAkQki
        0xkFUgCRCV7FjVJTDqQ5DSLTCpFphMg0QmQaITKNEJlGiEwjRKYRItMIkWmEyDRCZBohMo1QpQsHlkCB
        FEBkgsh0RoEUQGSCyHRGgRRAZILIdEaBFEBkgsh0RoEUQGSCV3Gj1JQDaU6DyLRCZBohMo0QmUaITCNE
        phEi0wiRaYTINEJkGiEyjRCZRohMI1TpwoElUCAFEJkgMp1RIAUQmSAynVEgBRCZIDKdUSAFEJkgMp1R
        IAUQmeBV3Cg15UCa0yAyrRCZRohMI0SmESLTCJFphMg0QmQaITKNEJlGiEwjRKYRItMIVbpwYAkUSAFE
        JohMZxRIAUQmiExnFEgBRCaITGcUSAFEJohMZxRIAUQmeBU3Sk05kOY0iEwrRKYRItMI/x+TsRolqO/V
        ewAAAABJRU5ErkJggg==
</value>
  </data>
</root>